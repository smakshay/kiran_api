// <auto-generated />
using System;
using CG_AirLineApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CG_AirLineApi.Migrations
{
    [DbContext(typeof(CG_AirlinesContext))]
    [Migration("20240526080718_IntialDBSETup")]
    partial class IntialDBSETup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CG_AirLineApi.Models.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .HasColumnType("int")
                        .HasColumnName("FlightID");

                    b.Property<string>("ArrivalTime")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DeptTime")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("Fare")
                        .IsRequired()
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("LaunchDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<int?>("NoOfSeats")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("FlightId");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("CG_AirLineApi.Models.Reservation", b =>
                {
                    b.Property<int>("TicketNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContactNo")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateofBooking")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<int?>("FlightId")
                        .HasColumnType("int")
                        .HasColumnName("FlightID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("JourneyDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<int?>("NoofTickets")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("PassengerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ticketstatus")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("ticketstatus");

                    b.Property<decimal?>("TotalFare")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("TicketNo")
                        .HasName("Pk2_Tno");

                    b.HasIndex("FlightId");

                    b.HasIndex("Id");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("CG_AirLineApi.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("CG_AirLineApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("CG_AirLineApi.Models.Reservation", b =>
                {
                    b.HasOne("CG_AirLineApi.Models.Flight", "Flight")
                        .WithMany("Reservations")
                        .HasForeignKey("FlightId")
                        .HasConstraintName("fk_fid");

                    b.HasOne("CG_AirLineApi.Models.User", "IdNavigation")
                        .WithMany("Reservations")
                        .HasForeignKey("Id")
                        .HasConstraintName("fk_uid");

                    b.Navigation("Flight");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("CG_AirLineApi.Models.User", b =>
                {
                    b.HasOne("CG_AirLineApi.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__users__RoleId__52593CB8");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CG_AirLineApi.Models.Flight", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("CG_AirLineApi.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CG_AirLineApi.Models.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
